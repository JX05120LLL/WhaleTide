{"remainingRequest":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\store\\modules\\user.js","mtime":1747292245922},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\babel.config.js","mtime":1744791066000},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1747114801239},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\eslint-loader\\index.js","mtime":1747114800457}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["login","logout","getInfo","getToken","setToken","removeToken","state","token","name","avatar","roles","username","email","phone","createTime","lastLoginTime","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","SET_USERNAME","SET_EMAIL","SET_PHONE","SET_CREATE_TIME","SET_LAST_LOGIN_TIME","actions","commit","userInfo","password","Promise","resolve","reject","trim","then","response","console","log","code","data","Error","message","catch","error","displayName","avatarUrl","userRoles","length","process","env","NODE_ENV","warn","mockUserData","finally","localStorage","removeItem","sessionStorage","clear","resetToken","namespaced"],"sources":["D:/MyFile/NewProject/ghost-m-admin-web/src/store/modules/user.js"],"sourcesContent":["import { login, logout, getInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  roles: [],\n  username: '',\n  email: '',\n  phone: '',\n  createTime: '',\n  lastLoginTime: ''\n}\n\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_NAME: (state, name) => {\n    state.name = name\n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles\n  },\n  SET_USERNAME: (state, username) => {\n    state.username = username\n  },\n  SET_EMAIL: (state, email) => {\n    state.email = email\n  },\n  SET_PHONE: (state, phone) => {\n    state.phone = phone\n  },\n  SET_CREATE_TIME: (state, createTime) => {\n    state.createTime = createTime\n  },\n  SET_LAST_LOGIN_TIME: (state, lastLoginTime) => {\n    state.lastLoginTime = lastLoginTime\n  }\n}\n\nconst actions = {\n  // user login\n  login({ commit }, userInfo) {\n    const { username, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ username: username.trim(), password: password })\n        .then(response => {\n          // 打印完整响应以便调试\n          console.log('完整登录响应:', response)\n          \n          // 后端登录成功后会返回的数据结构\n          // { code: 200, message: \"登录成功\", data: { token: \"xxx\", ...其他用户信息 } }\n          if (response.code === 200) {\n            const { data } = response\n            if (!data || !data.token) {\n              reject(new Error('登录成功但未收到token，请联系管理员'))\n              return\n            }\n            \n            // 存储token\n            commit('SET_TOKEN', data.token)\n            setToken(data.token)\n            resolve(data)\n          } else {\n            reject(new Error(response.message || '登录失败'))\n          }\n        })\n        .catch(error => {\n          console.error('登录请求失败:', error)\n          reject(error)\n        })\n    })\n  },\n\n  // get user info\n  getInfo({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      // 打印token用于调试\n      console.log('获取用户信息使用的token:', state.token)\n      \n      getInfo(state.token)\n        .then(response => {\n          // 记录响应用于调试\n          console.log('获取用户信息响应:', response)\n          \n          const { data } = response\n          \n          if (!data) {\n            reject(new Error('验证失败，请重新登录'))\n            return\n          }\n          \n          // 提取用户信息，兼容不同的API返回格式\n          const { \n            name, \n            username, \n            avatar, \n            roles = [], \n            email, \n            phone, \n            createTime, \n            lastLoginTime \n          } = data\n          \n          // 用户名处理：优先使用name，如果没有则使用username\n          const displayName = name || username || 'Admin User'\n          \n          // 头像处理：如果没有则使用默认头像\n          const avatarUrl = avatar || 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif'\n          \n          // 角色处理：如果没有则提供默认角色 - 在开发环境允许跳过角色验证\n          let userRoles = roles\n          if ((!userRoles || userRoles.length <= 0) && process.env.NODE_ENV === 'development') {\n            console.warn('开发环境 - 使用默认管理员角色')\n            userRoles = ['admin']\n          } else if (!userRoles || userRoles.length <= 0) {\n            reject(new Error('用户角色必须是非空数组!'))\n            return\n          }\n          \n          // 提交基本信息\n          commit('SET_NAME', displayName)\n          commit('SET_AVATAR', avatarUrl)\n          commit('SET_ROLES', userRoles)\n          \n          // 提交额外信息\n          commit('SET_USERNAME', username || '')\n          commit('SET_EMAIL', email || '')\n          commit('SET_PHONE', phone || '')\n          commit('SET_CREATE_TIME', createTime || '')\n          commit('SET_LAST_LOGIN_TIME', lastLoginTime || '')\n          \n          resolve(data)\n        })\n        .catch(error => {\n          console.error('获取用户信息失败:', error)\n          \n          // 开发环境下使用模拟数据\n          if (process.env.NODE_ENV === 'development') {\n            console.warn('开发环境 - 使用模拟用户数据')\n            const mockUserData = {\n              name: 'Admin',\n              username: 'admin',\n              avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n              roles: ['admin'],\n              email: 'admin@example.com',\n              phone: '138****1234',\n              createTime: '2023-01-01',\n              lastLoginTime: '2023-06-15'\n            }\n            commit('SET_NAME', mockUserData.name)\n            commit('SET_AVATAR', mockUserData.avatar)\n            commit('SET_ROLES', mockUserData.roles)\n            commit('SET_USERNAME', mockUserData.username)\n            commit('SET_EMAIL', mockUserData.email)\n            commit('SET_PHONE', mockUserData.phone)\n            commit('SET_CREATE_TIME', mockUserData.createTime)\n            commit('SET_LAST_LOGIN_TIME', mockUserData.lastLoginTime)\n            resolve(mockUserData)\n            return\n          }\n          \n          reject(error)\n        })\n    })\n  },\n\n  // user logout\n  logout({ commit, state }) {\n    return new Promise((resolve) => {\n      // 尝试调用后端登出接口，但不等待结果\n      logout().catch(error => {\n        console.warn('后端登出接口调用失败，但本地登出仍将继续:', error)\n      }).finally(() => {\n        // 无论后端请求成功或失败，都执行本地清理\n        commit('SET_TOKEN', '')\n        commit('SET_ROLES', [])\n        commit('SET_NAME', '')\n        commit('SET_AVATAR', '')\n        commit('SET_USERNAME', '')\n        commit('SET_EMAIL', '')\n        commit('SET_PHONE', '')\n        commit('SET_CREATE_TIME', '')\n        commit('SET_LAST_LOGIN_TIME', '')\n        removeToken()\n        \n        // 记录日志\n        console.log('用户已登出系统')\n        \n        // 移除其他可能存在的用户信息\n        localStorage.removeItem('sidebarStatus')\n        sessionStorage.clear()\n        \n        // 始终被视为成功，从不reject\n        resolve()\n      })\n    })\n  },\n\n  // remove token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      commit('SET_NAME', '')\n      commit('SET_AVATAR', '')\n      commit('SET_USERNAME', '')\n      commit('SET_EMAIL', '')\n      commit('SET_PHONE', '')\n      commit('SET_CREATE_TIME', '')\n      commit('SET_LAST_LOGIN_TIME', '')\n      removeToken()\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n} "],"mappings":";AAAA,SAASA,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,YAAY;AACnD,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,cAAc;AAE9D,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAEJ,QAAQ,CAAC,CAAC;EACjBK,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAAS,EAAEA,CAACX,KAAK,EAAEC,KAAK,KAAK;IAC3BD,KAAK,CAACC,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDW,QAAQ,EAAEA,CAACZ,KAAK,EAAEE,IAAI,KAAK;IACzBF,KAAK,CAACE,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDW,UAAU,EAAEA,CAACb,KAAK,EAAEG,MAAM,KAAK;IAC7BH,KAAK,CAACG,MAAM,GAAGA,MAAM;EACvB,CAAC;EACDW,SAAS,EAAEA,CAACd,KAAK,EAAEI,KAAK,KAAK;IAC3BJ,KAAK,CAACI,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDW,YAAY,EAAEA,CAACf,KAAK,EAAEK,QAAQ,KAAK;IACjCL,KAAK,CAACK,QAAQ,GAAGA,QAAQ;EAC3B,CAAC;EACDW,SAAS,EAAEA,CAAChB,KAAK,EAAEM,KAAK,KAAK;IAC3BN,KAAK,CAACM,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDW,SAAS,EAAEA,CAACjB,KAAK,EAAEO,KAAK,KAAK;IAC3BP,KAAK,CAACO,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDW,eAAe,EAAEA,CAAClB,KAAK,EAAEQ,UAAU,KAAK;IACtCR,KAAK,CAACQ,UAAU,GAAGA,UAAU;EAC/B,CAAC;EACDW,mBAAmB,EAAEA,CAACnB,KAAK,EAAES,aAAa,KAAK;IAC7CT,KAAK,CAACS,aAAa,GAAGA,aAAa;EACrC;AACF,CAAC;AAED,MAAMW,OAAO,GAAG;EACd;EACA1B,KAAKA,CAAC;IAAE2B;EAAO,CAAC,EAAEC,QAAQ,EAAE;IAC1B,MAAM;MAAEjB,QAAQ;MAAEkB;IAAS,CAAC,GAAGD,QAAQ;IACvC,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtChC,KAAK,CAAC;QAAEW,QAAQ,EAAEA,QAAQ,CAACsB,IAAI,CAAC,CAAC;QAAEJ,QAAQ,EAAEA;MAAS,CAAC,CAAC,CACrDK,IAAI,CAACC,QAAQ,IAAI;QAChB;QACAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAAC;;QAEhC;QACA;QACA,IAAIA,QAAQ,CAACG,IAAI,KAAK,GAAG,EAAE;UACzB,MAAM;YAAEC;UAAK,CAAC,GAAGJ,QAAQ;UACzB,IAAI,CAACI,IAAI,IAAI,CAACA,IAAI,CAAChC,KAAK,EAAE;YACxByB,MAAM,CAAC,IAAIQ,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACzC;UACF;;UAEA;UACAb,MAAM,CAAC,WAAW,EAAEY,IAAI,CAAChC,KAAK,CAAC;UAC/BH,QAAQ,CAACmC,IAAI,CAAChC,KAAK,CAAC;UACpBwB,OAAO,CAACQ,IAAI,CAAC;QACf,CAAC,MAAM;UACLP,MAAM,CAAC,IAAIQ,KAAK,CAACL,QAAQ,CAACM,OAAO,IAAI,MAAM,CAAC,CAAC;QAC/C;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdP,OAAO,CAACO,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BX,MAAM,CAACW,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED;EACAzC,OAAOA,CAAC;IAAEyB,MAAM;IAAErB;EAAM,CAAC,EAAE;IACzB,OAAO,IAAIwB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC;MACAI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE/B,KAAK,CAACC,KAAK,CAAC;MAE3CL,OAAO,CAACI,KAAK,CAACC,KAAK,CAAC,CACjB2B,IAAI,CAACC,QAAQ,IAAI;QAChB;QACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;QAElC,MAAM;UAAEI;QAAK,CAAC,GAAGJ,QAAQ;QAEzB,IAAI,CAACI,IAAI,EAAE;UACTP,MAAM,CAAC,IAAIQ,KAAK,CAAC,YAAY,CAAC,CAAC;UAC/B;QACF;;QAEA;QACA,MAAM;UACJhC,IAAI;UACJG,QAAQ;UACRF,MAAM;UACNC,KAAK,GAAG,EAAE;UACVE,KAAK;UACLC,KAAK;UACLC,UAAU;UACVC;QACF,CAAC,GAAGwB,IAAI;;QAER;QACA,MAAMK,WAAW,GAAGpC,IAAI,IAAIG,QAAQ,IAAI,YAAY;;QAEpD;QACA,MAAMkC,SAAS,GAAGpC,MAAM,IAAI,qEAAqE;;QAEjG;QACA,IAAIqC,SAAS,GAAGpC,KAAK;QACrB,IAAI,CAAC,CAACoC,SAAS,IAAIA,SAAS,CAACC,MAAM,IAAI,CAAC,KAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UACnFd,OAAO,CAACe,IAAI,CAAC,kBAAkB,CAAC;UAChCL,SAAS,GAAG,CAAC,OAAO,CAAC;QACvB,CAAC,MAAM,IAAI,CAACA,SAAS,IAAIA,SAAS,CAACC,MAAM,IAAI,CAAC,EAAE;UAC9Cf,MAAM,CAAC,IAAIQ,KAAK,CAAC,cAAc,CAAC,CAAC;UACjC;QACF;;QAEA;QACAb,MAAM,CAAC,UAAU,EAAEiB,WAAW,CAAC;QAC/BjB,MAAM,CAAC,YAAY,EAAEkB,SAAS,CAAC;QAC/BlB,MAAM,CAAC,WAAW,EAAEmB,SAAS,CAAC;;QAE9B;QACAnB,MAAM,CAAC,cAAc,EAAEhB,QAAQ,IAAI,EAAE,CAAC;QACtCgB,MAAM,CAAC,WAAW,EAAEf,KAAK,IAAI,EAAE,CAAC;QAChCe,MAAM,CAAC,WAAW,EAAEd,KAAK,IAAI,EAAE,CAAC;QAChCc,MAAM,CAAC,iBAAiB,EAAEb,UAAU,IAAI,EAAE,CAAC;QAC3Ca,MAAM,CAAC,qBAAqB,EAAEZ,aAAa,IAAI,EAAE,CAAC;QAElDgB,OAAO,CAACQ,IAAI,CAAC;MACf,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;QACdP,OAAO,CAACO,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;;QAEjC;QACA,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UAC1Cd,OAAO,CAACe,IAAI,CAAC,iBAAiB,CAAC;UAC/B,MAAMC,YAAY,GAAG;YACnB5C,IAAI,EAAE,OAAO;YACbG,QAAQ,EAAE,OAAO;YACjBF,MAAM,EAAE,qEAAqE;YAC7EC,KAAK,EAAE,CAAC,OAAO,CAAC;YAChBE,KAAK,EAAE,mBAAmB;YAC1BC,KAAK,EAAE,aAAa;YACpBC,UAAU,EAAE,YAAY;YACxBC,aAAa,EAAE;UACjB,CAAC;UACDY,MAAM,CAAC,UAAU,EAAEyB,YAAY,CAAC5C,IAAI,CAAC;UACrCmB,MAAM,CAAC,YAAY,EAAEyB,YAAY,CAAC3C,MAAM,CAAC;UACzCkB,MAAM,CAAC,WAAW,EAAEyB,YAAY,CAAC1C,KAAK,CAAC;UACvCiB,MAAM,CAAC,cAAc,EAAEyB,YAAY,CAACzC,QAAQ,CAAC;UAC7CgB,MAAM,CAAC,WAAW,EAAEyB,YAAY,CAACxC,KAAK,CAAC;UACvCe,MAAM,CAAC,WAAW,EAAEyB,YAAY,CAACvC,KAAK,CAAC;UACvCc,MAAM,CAAC,iBAAiB,EAAEyB,YAAY,CAACtC,UAAU,CAAC;UAClDa,MAAM,CAAC,qBAAqB,EAAEyB,YAAY,CAACrC,aAAa,CAAC;UACzDgB,OAAO,CAACqB,YAAY,CAAC;UACrB;QACF;QAEApB,MAAM,CAACW,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED;EACA1C,MAAMA,CAAC;IAAE0B,MAAM;IAAErB;EAAM,CAAC,EAAE;IACxB,OAAO,IAAIwB,OAAO,CAAEC,OAAO,IAAK;MAC9B;MACA9B,MAAM,CAAC,CAAC,CAACyC,KAAK,CAACC,KAAK,IAAI;QACtBP,OAAO,CAACe,IAAI,CAAC,uBAAuB,EAAER,KAAK,CAAC;MAC9C,CAAC,CAAC,CAACU,OAAO,CAAC,MAAM;QACf;QACA1B,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QACvBA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QACvBA,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;QACtBA,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;QACxBA,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC;QAC1BA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QACvBA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QACvBA,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC;QAC7BA,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC;QACjCtB,WAAW,CAAC,CAAC;;QAEb;QACA+B,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;;QAEtB;QACAiB,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;QACxCC,cAAc,CAACC,KAAK,CAAC,CAAC;;QAEtB;QACA1B,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED;EACA2B,UAAUA,CAAC;IAAE/B;EAAO,CAAC,EAAE;IACrB,OAAO,IAAIG,OAAO,CAACC,OAAO,IAAI;MAC5BJ,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;MACvBA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;MACvBA,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;MACtBA,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;MACxBA,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC;MAC1BA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;MACvBA,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;MACvBA,MAAM,CAAC,iBAAiB,EAAE,EAAE,CAAC;MAC7BA,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC;MACjCtB,WAAW,CAAC,CAAC;MACb0B,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAe;EACb4B,UAAU,EAAE,IAAI;EAChBrD,KAAK;EACLU,SAAS;EACTU;AACF,CAAC","ignoreList":[]}]}