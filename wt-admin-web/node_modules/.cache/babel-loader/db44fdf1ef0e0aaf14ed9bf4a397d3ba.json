{"remainingRequest":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\views\\order\\Statistics.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\views\\order\\Statistics.vue","mtime":1744791067000},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\babel.config.js","mtime":1744791066000},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1747114801239},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1747114801604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["echarts","waves","fetchOrderStatistics","name","directives","data","loading","timeRange","getLastMonthDate","getCurrentDate","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","salesChartType","salesChart","statusChart","statistics","totalOrders","totalAmount","totalItems","averageOrderValue","statusDistribution","salesTrend","topProducts","mounted","fetchData","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","setMonth","handleDateChange","resetFilter","params","startDate","endDate","type","then","response","console","log","PENDING","PAID","SHIPPED","COMPLETED","CANCELLED","REFUNDED","labels","sales","orders","initCharts","catch","error","$message","initSalesChart","initStatusChart","salesChartDom","$refs","init","option","tooltip","trigger","axisPointer","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","xAxis","yAxis","min","axisLabel","formatter","series","yAxisIndex","setOption","statusChartDom","statusData","Object","entries","map","status","count","getStatusName","value","orient","left","item","radius","avoidLabelOverlap","label","position","emphasis","fontSize","fontWeight","labelLine","resize","updateSalesChart","statusMap","getRankType","index","types","goToProduct","id","$router","push","path"],"sources":["src/views/order/Statistics.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-date-picker\n        v-model=\"timeRange\"\n        type=\"daterange\"\n        range-separator=\"至\"\n        start-placeholder=\"开始日期\"\n        end-placeholder=\"结束日期\"\n        value-format=\"yyyy-MM-dd\"\n        :picker-options=\"pickerOptions\"\n        style=\"width: 350px\"\n        @change=\"handleDateChange\"\n      />\n      <el-button v-waves type=\"primary\" icon=\"el-icon-search\" @click=\"fetchData\">\n        查询\n      </el-button>\n      <el-button v-waves icon=\"el-icon-refresh\" @click=\"resetFilter\">\n        重置\n      </el-button>\n    </div>\n\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>订单总数</span>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"statistics-number\">{{ statistics.totalOrders }}</div>\n            <div class=\"statistics-label\">笔订单</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>成交金额</span>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"statistics-number\">¥{{ statistics.totalAmount.toFixed(2) }}</div>\n            <div class=\"statistics-label\">总金额</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>商品销量</span>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"statistics-number\">{{ statistics.totalItems }}</div>\n            <div class=\"statistics-label\">销售数量</div>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>客单价</span>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"statistics-number\">¥{{ statistics.averageOrderValue.toFixed(2) }}</div>\n            <div class=\"statistics-label\">平均订单金额</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\" style=\"height: 400px\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>销售趋势</span>\n            <el-radio-group v-model=\"salesChartType\" size=\"mini\" style=\"float: right\" @change=\"updateSalesChart\">\n              <el-radio-button label=\"daily\">日</el-radio-button>\n              <el-radio-button label=\"weekly\">周</el-radio-button>\n              <el-radio-button label=\"monthly\">月</el-radio-button>\n            </el-radio-group>\n          </div>\n          <div class=\"chart-wrapper\">\n            <div ref=\"salesChart\" class=\"chart-container\" />\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card class=\"box-card\" style=\"height: 400px\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>订单状态分布</span>\n          </div>\n          <div class=\"chart-wrapper\">\n            <div ref=\"statusChart\" class=\"chart-container\" />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n      <el-col :span=\"24\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>热销商品 Top 10</span>\n          </div>\n          <el-table\n            :data=\"statistics.topProducts\"\n            style=\"width: 100%\"\n            border\n            v-loading=\"loading\"\n          >\n            <el-table-column\n              label=\"排名\"\n              width=\"80\"\n              align=\"center\"\n            >\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"getRankType(scope.$index)\">{{ scope.$index + 1 }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"商品图片\"\n              width=\"120\"\n              align=\"center\"\n            >\n              <template slot-scope=\"scope\">\n                <el-image\n                  style=\"width: 60px; height: 60px\"\n                  :src=\"scope.row.image\"\n                  fit=\"cover\"\n                >\n                  <div slot=\"error\" class=\"image-slot\">\n                    <i class=\"el-icon-picture-outline\"></i>\n                  </div>\n                </el-image>\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"name\"\n              label=\"商品名称\"\n              min-width=\"200\"\n            />\n            <el-table-column\n              prop=\"price\"\n              label=\"单价\"\n              width=\"120\"\n              align=\"center\"\n            >\n              <template slot-scope=\"scope\">\n                <span class=\"price\">¥{{ scope.row.price.toFixed(2) }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"salesCount\"\n              label=\"销量\"\n              width=\"100\"\n              align=\"center\"\n              sortable\n            />\n            <el-table-column\n              label=\"销售额\"\n              width=\"150\"\n              align=\"center\"\n            >\n              <template slot-scope=\"scope\">\n                <span class=\"price\">¥{{ (scope.row.price * scope.row.salesCount).toFixed(2) }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              fixed=\"right\"\n              label=\"操作\"\n              width=\"120\"\n              align=\"center\"\n            >\n              <template slot-scope=\"scope\">\n                <el-button \n                  type=\"text\" \n                  size=\"small\" \n                  @click=\"goToProduct(scope.row.id)\"\n                >\n                  商品详情\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport waves from '@/directive/waves/index'\nimport { fetchOrderStatistics } from '@/api/order'\n\nexport default {\n  name: 'OrderStatistics',\n  directives: { waves },\n  data() {\n    return {\n      loading: false,\n      timeRange: [\n        this.getLastMonthDate(),\n        this.getCurrentDate()\n      ],\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: '最近一周',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: '最近一个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: '最近三个月',\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n              picker.$emit('pick', [start, end])\n            }\n          }\n        ]\n      },\n      salesChartType: 'daily',\n      salesChart: null,\n      statusChart: null,\n      statistics: {\n        totalOrders: 0,\n        totalAmount: 0,\n        totalItems: 0,\n        averageOrderValue: 0,\n        statusDistribution: {},\n        salesTrend: {},\n        topProducts: []\n      }\n    }\n  },\n  mounted() {\n    this.fetchData()\n    window.addEventListener('resize', this.handleResize)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize)\n    if (this.salesChart) {\n      this.salesChart.dispose()\n    }\n    if (this.statusChart) {\n      this.statusChart.dispose()\n    }\n  },\n  methods: {\n    getCurrentDate() {\n      const date = new Date()\n      const year = date.getFullYear()\n      const month = (date.getMonth() + 1).toString().padStart(2, '0')\n      const day = date.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    },\n    getLastMonthDate() {\n      const date = new Date()\n      date.setMonth(date.getMonth() - 1)\n      const year = date.getFullYear()\n      const month = (date.getMonth() + 1).toString().padStart(2, '0')\n      const day = date.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    },\n    handleDateChange() {\n      // Will be triggered by the fetchData method\n    },\n    resetFilter() {\n      this.timeRange = [\n        this.getLastMonthDate(),\n        this.getCurrentDate()\n      ]\n      this.fetchData()\n    },\n    fetchData() {\n      this.loading = true\n      \n      const params = {\n        startDate: this.timeRange[0],\n        endDate: this.timeRange[1],\n        type: this.salesChartType\n      }\n      \n      fetchOrderStatistics(params).then(response => {\n        console.log('Statistics data:', response.data)\n        this.statistics = response.data\n        \n        // Default values if data is missing\n        if (!this.statistics.statusDistribution) {\n          this.statistics.statusDistribution = {\n            PENDING: 0,\n            PAID: 0,\n            SHIPPED: 0,\n            COMPLETED: 0,\n            CANCELLED: 0,\n            REFUNDED: 0\n          }\n        }\n        \n        if (!this.statistics.salesTrend) {\n          this.statistics.salesTrend = {\n            labels: [],\n            sales: [],\n            orders: []\n          }\n        }\n        \n        this.initCharts()\n        this.loading = false\n      }).catch(error => {\n        console.error('获取统计数据失败:', error)\n        this.$message.error('获取统计数据失败')\n        this.loading = false\n      })\n    },\n    initCharts() {\n      this.initSalesChart()\n      this.initStatusChart()\n    },\n    initSalesChart() {\n      if (this.salesChart) {\n        this.salesChart.dispose()\n      }\n      \n      const salesChartDom = this.$refs.salesChart\n      this.salesChart = echarts.init(salesChartDom)\n      \n      const { labels, sales, orders } = this.statistics.salesTrend\n      \n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: { show: true, readOnly: false },\n            magicType: { show: true, type: ['line', 'bar'] },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        legend: {\n          data: ['销售额', '订单数']\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: labels,\n            axisPointer: {\n              type: 'shadow'\n            }\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '销售额',\n            min: 0,\n            axisLabel: {\n              formatter: '¥{value}'\n            }\n          },\n          {\n            type: 'value',\n            name: '订单数',\n            min: 0,\n            axisLabel: {\n              formatter: '{value}'\n            }\n          }\n        ],\n        series: [\n          {\n            name: '销售额',\n            type: 'bar',\n            data: sales\n          },\n          {\n            name: '订单数',\n            type: 'line',\n            yAxisIndex: 1,\n            data: orders\n          }\n        ]\n      }\n      \n      this.salesChart.setOption(option)\n    },\n    initStatusChart() {\n      if (this.statusChart) {\n        this.statusChart.dispose()\n      }\n      \n      const statusChartDom = this.$refs.statusChart\n      this.statusChart = echarts.init(statusChartDom)\n      \n      const { statusDistribution } = this.statistics\n      const statusData = Object.entries(statusDistribution).map(([status, count]) => ({\n        name: this.getStatusName(status),\n        value: count\n      }))\n      \n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: statusData.map(item => item.name)\n        },\n        color: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399', '#9B59B6'],\n        series: [\n          {\n            name: '订单状态',\n            type: 'pie',\n            radius: ['50%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '16',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: statusData\n          }\n        ]\n      }\n      \n      this.statusChart.setOption(option)\n    },\n    handleResize() {\n      if (this.salesChart) {\n        this.salesChart.resize()\n      }\n      if (this.statusChart) {\n        this.statusChart.resize()\n      }\n    },\n    updateSalesChart() {\n      this.fetchData()\n    },\n    getStatusName(status) {\n      const statusMap = {\n        PENDING: '待支付',\n        PAID: '已支付',\n        SHIPPED: '已发货',\n        COMPLETED: '已完成',\n        CANCELLED: '已取消',\n        REFUNDED: '已退款'\n      }\n      return statusMap[status] || status\n    },\n    getRankType(index) {\n      const types = ['danger', 'warning', 'success', '', '', '', '', '', '', '']\n      return types[index] || ''\n    },\n    goToProduct(id) {\n      this.$router.push({\n        path: `/product/detail/${id}`\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.filter-container {\n  padding-bottom: 15px;\n  display: flex;\n  gap: 10px;\n}\n\n.box-card {\n  margin-bottom: 15px;\n}\n\n.card-content {\n  text-align: center;\n  padding: 20px 0;\n  \n  .statistics-number {\n    font-size: 28px;\n    font-weight: bold;\n    color: #409EFF;\n    margin-bottom: 5px;\n  }\n  \n  .statistics-label {\n    font-size: 14px;\n    color: #606266;\n  }\n}\n\n.chart-wrapper {\n  height: 340px;\n  width: 100%;\n  \n  .chart-container {\n    height: 100%;\n    width: 100%;\n  }\n}\n\n.price {\n  color: #f56c6c;\n  font-weight: bold;\n}\n\n.trending-up {\n  color: #67C23A;\n}\n\n.trending-down {\n  color: #F56C6C;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}