{"remainingRequest":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\views\\product\\category\\index.vue?vue&type=style&index=0&id=aa55f08a&scoped=true&lang=css","dependencies":[{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\views\\product\\category\\index.vue","mtime":1747211634576},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747114801135},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747114802028},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1747114801227},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1747114801604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jYXRlZ29yeS1jb250YWluZXIgewogIHBhZGRpbmc6IDIwcHg7Cn0KCi5oZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmhlYWRlciBoMiB7CiAgbWFyZ2luOiAwOwogIGZvbnQtc2l6ZTogMjBweDsKfQoKLmRpYWxvZy1mb290ZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICBnYXA6IDEwcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAiLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/product/category","sourcesContent":["<template>\n  <div class=\"category-container\">\n    <div class=\"header\">\n      <h2>商品分类管理</h2>\n      <el-button type=\"primary\" @click=\"handleAdd\">添加分类</el-button>\n    </div>\n\n    <el-table :data=\"categoryList\" border style=\"width: 100%\" v-loading=\"loading\">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n      <el-table-column prop=\"name\" label=\"分类名称\" />\n      <el-table-column prop=\"description\" label=\"描述\" />\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\" />\n      <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"text\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button type=\"text\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 添加/编辑分类对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form\n        ref=\"form\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"分类名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"请输入分类名称\" />\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input\n            v-model=\"form.description\"\n            type=\"textarea\"\n            placeholder=\"请输入分类描述\"\n          />\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { MessageBox, Message } from 'element-ui'\nimport request from '@/utils/request'\n\nexport default {\n  name: 'CategoryManagement',\n  data() {\n    return {\n      loading: false,\n      categoryList: [],\n      dialogVisible: false,\n      dialogTitle: '',\n      form: {\n        id: null,\n        name: '',\n        description: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n        ],\n        description: [\n          { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getCategoryList()\n  },\n  methods: {\n    // 获取分类列表\n    async getCategoryList() {\n      try {\n        this.loading = true\n        const res = await request.get('/api/admin/category/list')\n        if (res.code === 200) {\n          this.categoryList = res.data\n        }\n      } catch (error) {\n        console.error('获取分类列表失败:', error)\n        Message.error('获取分类列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 添加分类\n    handleAdd() {\n      this.dialogTitle = '添加分类'\n      this.form = {\n        id: null,\n        name: '',\n        description: ''\n      }\n      this.dialogVisible = true\n    },\n\n    // 编辑分类\n    handleEdit(row) {\n      this.dialogTitle = '编辑分类'\n      this.form = {\n        id: row.id,\n        name: row.name,\n        description: row.description\n      }\n      this.dialogVisible = true\n    },\n\n    // 删除分类\n    handleDelete(row) {\n      MessageBox.confirm('确认删除该分类吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const res = await request.delete(`/api/admin/category/delete/${row.id}`)\n          if (res.code === 200) {\n            Message.success('删除成功')\n            this.getCategoryList()\n          }\n        } catch (error) {\n          console.error('删除分类失败:', error)\n          Message.error('删除分类失败')\n        }\n      }).catch(() => {})\n    },\n\n    // 提交表单\n    handleSubmit() {\n      this.$refs.form.validate(async (valid) => {\n        if (valid) {\n          try {\n            const isEdit = this.form.id !== null\n            const api = isEdit ? '/api/admin/category/update' : '/api/admin/category/add'\n            \n            // 创建要提交的数据对象\n            let submitData = { ...this.form }\n            \n            // 如果是添加分类，则删除id字段\n            if (!isEdit) {\n              delete submitData.id\n            }\n            \n            const res = await request[isEdit ? 'put' : 'post'](api, submitData)\n            \n            if (res.code === 200) {\n              Message.success(isEdit ? '更新成功' : '添加成功')\n              this.dialogVisible = false\n              this.getCategoryList()\n            }\n          } catch (error) {\n            console.error(isEdit ? '更新分类失败:' : '添加分类失败:', error)\n            Message.error(isEdit ? '更新分类失败' : '添加分类失败')\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.category-container {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.header h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n</style> "]}]}