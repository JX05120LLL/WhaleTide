{"remainingRequest":"D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\src\\views\\product\\List.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\src\\views\\product\\List.vue","mtime":1747213043563},{"path":"D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1747114801239},{"path":"D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\WhaleTide-web\\wt-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1747114801604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["List.vue"],"names":[],"mappings":";AAifile":"List.vue","sourceRoot":"src/views/product","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 过滤搜索区域 -->\n    <div class=\"filter-container\">\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\">\n          <el-input\n            v-model=\"listQuery.keyword\"\n            placeholder=\"商品名称\"\n            clearable\n            class=\"filter-item\"\n            @keyup.enter.native=\"handleSearch\"\n          />\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\">\n          <el-select\n            v-model=\"listQuery.status\"\n            placeholder=\"商品状态\"\n            clearable\n            class=\"filter-item\"\n          >\n            <el-option\n              v-for=\"item in statusOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"8\" :lg=\"12\">\n          <div class=\"button-group\">\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-search\"\n              @click=\"handleSearch\"\n            >\n              搜索\n            </el-button>\n            <el-button\n              type=\"success\"\n              icon=\"el-icon-plus\"\n              @click=\"handleCreate\"\n            >\n              添加商品\n            </el-button>\n            <el-button\n              icon=\"el-icon-refresh\"\n              @click=\"refreshList\"\n            >\n              刷新\n            </el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 列表区域 -->\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"加载中...\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column\n        label=\"ID\"\n        align=\"center\"\n        width=\"80\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"商品图片\"\n        align=\"center\"\n        width=\"120\"\n      >\n        <template slot-scope=\"scope\">\n          <el-image\n            style=\"width: 80px; height: 80px\"\n            :src=\"formatImageUrl(scope.row.image)\"\n            fit=\"cover\"\n          >\n            <div slot=\"error\" class=\"image-slot\">\n              <i class=\"el-icon-picture-outline\"></i>\n            </div>\n          </el-image>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"商品名称\"\n        align=\"center\"\n        min-width=\"200\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"价格\"\n        align=\"center\"\n        width=\"120\"\n      >\n        <template slot-scope=\"scope\">\n          <span>￥{{ scope.row.price }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"库存\"\n        align=\"center\"\n        width=\"120\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.stock }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"状态\"\n        align=\"center\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status ? 'success' : 'info'\">\n            {{ scope.row.status ? '上架中' : '已下架' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"创建时间\"\n        align=\"center\"\n        width=\"180\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"操作\"\n        align=\"center\"\n        min-width=\"200\"\n      >\n        <template slot-scope=\"scope\">\n          <div class=\"action-buttons\">\n            <div class=\"button-row\">\n              <el-tooltip content=\"编辑商品\" placement=\"top\">\n                <el-button\n                  type=\"primary\"\n                  size=\"mini\"\n                  icon=\"el-icon-edit\"\n                  @click=\"handleUpdate(scope.row)\"\n                >\n                  编辑\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"查看详情\" placement=\"top\">\n                <el-button\n                  type=\"info\"\n                  size=\"mini\"\n                  icon=\"el-icon-view\"\n                  @click=\"handleDetail(scope.row)\"\n                >\n                  详情\n                </el-button>\n              </el-tooltip>\n            </div>\n            <div class=\"button-row\">\n              <el-tooltip :content=\"scope.row.status ? '下架商品' : '上架商品'\" placement=\"top\">\n                <el-button\n                  :type=\"scope.row.status ? 'warning' : 'success'\"\n                  size=\"mini\"\n                  :icon=\"scope.row.status ? 'el-icon-sold-out' : 'el-icon-shopping-cart-full'\"\n                  @click=\"handleStatusChange(scope.row)\"\n                >\n                  {{ scope.row.status ? '下架' : '上架' }}\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"删除商品\" placement=\"top\">\n                <el-button\n                  type=\"danger\"\n                  size=\"mini\"\n                  icon=\"el-icon-delete\"\n                  @click=\"handleDelete(scope.row)\"\n                >\n                  删除\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页区域 -->\n    <pagination\n      v-show=\"total > 0\"\n      :total=\"total\"\n      :page.sync=\"listQuery.pageNum\"\n      :limit.sync=\"listQuery.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 商品表单弹窗 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temp\"\n        label-position=\"left\"\n        label-width=\"100px\"\n        style=\"width: 400px; margin-left:50px;\"\n      >\n        <el-form-item label=\"商品名称\" prop=\"name\">\n          <el-input v-model=\"temp.name\" />\n        </el-form-item>\n        <el-form-item label=\"商品描述\" prop=\"description\">\n          <el-input v-model=\"temp.description\" type=\"textarea\" :rows=\"4\" />\n        </el-form-item>\n        <el-form-item label=\"商品价格\" prop=\"price\">\n          <el-input-number v-model=\"temp.price\" :precision=\"2\" :step=\"0.1\" :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"商品库存\" prop=\"stock\">\n          <el-input-number v-model=\"temp.stock\" :precision=\"0\" :step=\"1\" :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"商品分类\" prop=\"categoryId\">\n          <el-select v-model=\"temp.categoryId\" placeholder=\"请选择商品分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"item in categoryList\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"temp.status\" class=\"filter-item\">\n            <el-option\n              v-for=\"item in statusOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"商品图片\">\n          <el-upload\n            class=\"avatar-uploader\"\n            action=\"/api/file/upload\"\n            :headers=\"uploadHeaders\"\n            :show-file-list=\"false\"\n            :on-success=\"handleCoverSuccess\"\n            :before-upload=\"beforeCoverUpload\"\n          >\n            <img v-if=\"temp.image\" :src=\"temp.image\" class=\"avatar\">\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus === 'create' ? createData() : updateData()\">\n          确认\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { fetchProductList, fetchAllProductList, createProduct, updateProduct, deleteProduct, updateProductStatus } from '@/api/product'\nimport { fetchCategoryList } from '@/api/category'\nimport Pagination from '@/components/Pagination'\nimport { parseTime } from '@/utils'\n\nexport default {\n  name: 'ProductList',\n  components: { Pagination },\n  data() {\n    return {\n      list: [], // 商品列表\n      total: 0, // 总数\n      listLoading: true, // 加载状态\n      categoryList: [], // 商品分类列表\n      listQuery: { // 查询参数\n        pageNum: 1,\n        pageSize: 10,\n        keyword: '',\n        status: undefined\n      },\n      // 状态选项\n      statusOptions: [\n        { value: true, label: '上架中' },\n        { value: false, label: '已下架' }\n      ],\n      temp: {\n        id: undefined,\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        categoryId: '',\n        image: '',\n        status: true\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑商品',\n        create: '添加商品'\n      },\n      rules: {\n        name: [{ required: true, message: '请输入商品名称', trigger: 'blur' }],\n        description: [{ required: true, message: '请输入商品描述', trigger: 'blur' }],\n        price: [{ required: true, message: '请输入商品价格', trigger: 'blur' }],\n        stock: [{ required: true, message: '请输入商品库存', trigger: 'blur' }]\n      },\n      // 上传相关\n      uploadHeaders: {\n        Authorization: localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n      }\n    }\n  },\n  created() {\n    this.getList()\n    this.getCategoryList() // 获取商品分类列表\n  },\n  methods: {\n    // 获取商品列表\n    getList() {\n      this.listLoading = true\n      fetchAllProductList(this.listQuery).then(response => {\n        const { data } = response\n        this.list = data.list\n        this.total = data.total\n        this.listLoading = false\n      }).catch(() => {\n        this.listLoading = false\n        this.$message.error('获取商品列表失败')\n      })\n    },\n    // 获取商品分类列表\n    getCategoryList() {\n      fetchCategoryList()\n        .then(response => {\n          if (response.code === 200) {\n            this.categoryList = response.data\n          } else {\n            this.$message.error('获取商品分类失败：' + response.message)\n          }\n        })\n        .catch(error => {\n          console.error('获取商品分类失败:', error)\n          this.$message.error('获取商品分类失败')\n        })\n    },\n    // 处理搜索\n    handleSearch() {\n      this.listQuery.pageNum = 1\n      this.getList()\n    },\n    // 刷新列表\n    refreshList() {\n      this.listQuery.pageNum = 1\n      this.getList()\n    },\n    // 重置表单\n    resetTemp() {\n      this.temp = {\n        id: undefined,\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        categoryId: '',\n        image: '',\n        status: true\n      }\n    },\n    // 打开创建对话框\n    handleCreate() {\n      this.resetTemp()\n      this.getCategoryList() // 获取最新分类列表\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    // 创建数据\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          // 创建一个新对象，避免直接修改表单对象\n          const formData = { ...this.temp }\n          \n          // 将状态从布尔值转换为整数\n          formData.status = formData.status ? 1 : 0\n          \n          createProduct(formData).then(response => {\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '创建商品成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }).catch(() => {\n            this.$message.error('创建商品失败')\n          })\n        }\n      })\n    },\n    // 打开编辑对话框\n    handleUpdate(row) {\n      this.temp = Object.assign({}, row) // 复制对象\n      this.getCategoryList() // 获取最新分类列表\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    // 更新数据\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          // 创建一个新对象，只包含后端接受的字段\n          const tempData = {\n            id: this.temp.id,\n            name: this.temp.name,\n            description: this.temp.description,\n            price: this.temp.price,\n            stock: this.temp.stock,\n            categoryId: this.temp.categoryId,\n            image: this.temp.image,\n            status: this.temp.status ? 1 : 0\n          }\n          \n          // 如果有图片列表，也包含它\n          if (this.temp.images && this.temp.images.length > 0) {\n            tempData.images = this.temp.images;\n          }\n          \n          updateProduct(tempData).then(() => {\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '更新商品成功',\n              type: 'success',\n              duration: 2000\n            })\n            // 更新列表中的数据\n            for (const v of this.list) {\n              if (v.id === this.temp.id) {\n                const index = this.list.indexOf(v)\n                this.list.splice(index, 1, this.temp)\n                break\n              }\n            }\n          }).catch(() => {\n            this.$message.error('更新商品失败')\n          })\n        }\n      })\n    },\n    // 处理商品详情\n    handleDetail(row) {\n      this.$router.push({\n        name: 'ProductDetail',\n        params: { id: row.id }\n      })\n    },\n    // 处理删除商品\n    handleDelete(row) {\n      this.$confirm('确认删除该商品?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteProduct(row.id).then(() => {\n          this.$notify({\n            title: '成功',\n            message: '删除商品成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        }).catch(() => {\n          this.$message.error('删除商品失败')\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    // 切换商品状态\n    handleStatusChange(row) {\n      const statusText = row.status ? '下架' : '上架'\n      this.$confirm(`确认${statusText}该商品?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        updateProductStatus({\n          id: row.id,\n          status: row.status ? 0 : 1  // 转换为整数: true->0(下架), false->1(上架)\n        }).then(() => {\n          this.$notify({\n            title: '成功',\n            message: `商品${statusText}成功`,\n            type: 'success',\n            duration: 2000\n          })\n          // 更新本地状态\n          row.status = !row.status\n        }).catch(() => {\n          this.$message.error(`商品${statusText}失败`)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消操作'\n        })\n      })\n    },\n    // 处理封面上传成功\n    handleCoverSuccess(res, file) {\n      if (res.code === 200) {\n        this.temp.image = res.data.url\n      } else {\n        this.$message.error('上传失败: ' + res.message)\n      }\n    },\n    // 封面上传前检查\n    beforeCoverUpload(file) {\n      const isImage = file.type.startsWith('image/')\n      const isLt2M = file.size / 1024 / 1024 < 2\n      \n      if (!isImage) {\n        this.$message.error('只能上传图片文件!')\n      }\n      if (!isLt2M) {\n        this.$message.error('图片大小不能超过 2MB!')\n      }\n      \n      return isImage && isLt2M\n    },\n    // 格式化图片URL\n    formatImageUrl(url) {\n      if (!url) return '';\n      \n      // 处理特殊格式的URL（以@开头的时间戳格式）\n      if (url.startsWith('@')) {\n        return `http://localhost:8080/uploads/products/${url.substring(1)}`;\n      }\n      \n      // 确保URL是完整的\n      if (url.startsWith('/uploads/')) {\n        return `http://localhost:8080${url}`;\n      }\n      \n      // 已经是完整URL或其他情况，直接返回\n      return url;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  padding: 20px;\n}\n\n.filter-container {\n  background-color: #fff;\n  padding: 15px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n\n  .filter-item {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n\n  .button-group {\n    display: flex;\n    justify-content: flex-end;\n    \n    .el-button {\n      margin-left: 10px;\n    }\n    \n    @media (max-width: 768px) {\n      justify-content: center;\n      margin-top: 10px;\n    }\n  }\n}\n\n.action-buttons {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  \n  .button-row {\n    display: flex;\n    justify-content: center;\n    margin: 3px 0;\n    \n    .el-button {\n      margin: 2px;\n      min-width: 80px;\n    }\n  }\n}\n\n.pagination-container {\n  margin-top: 20px;\n}\n\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n</style> "]}]}