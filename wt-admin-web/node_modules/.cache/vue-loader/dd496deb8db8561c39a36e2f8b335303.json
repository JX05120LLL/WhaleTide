{"remainingRequest":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\views\\order\\List.vue?vue&type=style&index=0&id=8eada60e&lang=scss&scoped=true","dependencies":[{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\src\\views\\order\\List.vue","mtime":1747214615673},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747114801135},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747114802028},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\postcss-loader\\src\\index.js","mtime":1747114801227},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1747114800464},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747114800727},{"path":"D:\\MyFile\\NewProject\\ghost-m-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1747114801604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hcHAtY29udGFpbmVyIHsKICBwYWRkaW5nOiAyMHB4Owp9CgouZmlsdGVyLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAxNXB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMSk7CgogIC5maWx0ZXItaXRlbSB7CiAgICB3aWR0aDogMTAwJTsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgfQoKICAuYnV0dG9uLWdyb3VwIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogICAgCiAgICAuZWwtYnV0dG9uIHsKICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICB9CiAgICAKICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgbWFyZ2luLXRvcDogMTBweDsKICAgIH0KICB9Cn0KCi5hY3Rpb24tYnV0dG9ucyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIAogIC5idXR0b24tcm93IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIG1hcmdpbjogM3B4IDA7CiAgICAKICAgIC5lbC1idXR0b24gewogICAgICBtYXJnaW46IDJweDsKICAgICAgbWluLXdpZHRoOiA4MHB4OwogICAgfQogIH0KfQoKLnVzZXItaW5mbyB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIAogIC51c2VyLW5hbWUgewogICAgbWFyZ2luLWxlZnQ6IDhweDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICBtYXgtd2lkdGg6IDgwcHg7CiAgfQp9CgoucHJpY2UgewogIGNvbG9yOiAjZjU2YzZjOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cg=="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";AAooBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 过滤搜索区域 -->\n    <div class=\"filter-container\">\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\">\n          <!-- 添加用户ID输入框 -->\n          <el-input\n            v-model=\"listQuery.userId\"\n            placeholder=\"用户ID\"\n            clearable\n            class=\"filter-item\"\n          />\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\">\n          <el-select\n            v-model=\"listQuery.status\"\n            placeholder=\"订单状态\"\n            clearable\n            class=\"filter-item\"\n          >\n            <el-option\n              v-for=\"item in statusOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"8\" :lg=\"12\">\n          <div class=\"button-group\">\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-search\"\n              @click=\"handleSearch\"\n            >\n              搜索\n            </el-button>\n            <el-button\n              icon=\"el-icon-refresh\"\n              @click=\"refreshList\"\n            >\n              刷新\n            </el-button>\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-download\"\n              @click=\"handleExport\"\n            >\n              导出数据\n            </el-button>\n            <el-button\n              type=\"warning\"\n              icon=\"el-icon-data-line\"\n              @click=\"loadTestData\"\n            >\n              测试数据\n            </el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 列表区域 -->\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"加载中...\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column\n        label=\"订单号\"\n        align=\"center\"\n        width=\"180\"\n      >\n        <template slot-scope=\"scope\">\n          <el-link type=\"primary\" @click=\"handleDetail(scope.row)\">{{ scope.row.orderSn }}</el-link>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"用户\"\n        align=\"center\"\n        width=\"120\"\n      >\n        <template slot-scope=\"scope\">\n          <div class=\"user-info\">\n            <el-avatar :size=\"30\" :src=\"scope.row.userAvatar || ''\">{{ scope.row.userName ? scope.row.userName.substring(0, 1) : 'U' }}</el-avatar>\n            <span class=\"user-name\">{{ scope.row.userName }}</span>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"商品数量\"\n        align=\"center\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ getItemCount(scope.row) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"订单金额\"\n        align=\"center\"\n        width=\"120\"\n      >\n        <template slot-scope=\"scope\">\n          <span class=\"price\">￥{{ scope.row.totalAmount }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"支付方式\"\n        align=\"center\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ getpayTypeName(scope.row.payType) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"订单状态\"\n        align=\"center\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getOrderStatusType(scope.row.status)\">\n            {{ getOrderStatusName(scope.row.status) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"创建时间\"\n        align=\"center\"\n        width=\"180\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        label=\"操作\"\n        align=\"center\"\n        min-width=\"200\"\n      >\n        <template slot-scope=\"scope\">\n          <div class=\"action-buttons\">\n            <div class=\"button-row\">\n              <el-tooltip content=\"订单详情\" placement=\"top\">\n                <el-button\n                  type=\"primary\"\n                  size=\"mini\"\n                  icon=\"el-icon-view\"\n                  @click=\"handleDetail(scope.row)\"\n                >\n                  详情\n                </el-button>\n              </el-tooltip>\n              \n              <el-tooltip v-if=\"scope.row.status === 1\" content=\"发货\" placement=\"top\">\n                <el-button\n                  type=\"success\"\n                  size=\"mini\"\n                  icon=\"el-icon-truck\"\n                  @click=\"handleShip(scope.row)\"\n                >\n                  发货\n                </el-button>\n              </el-tooltip>\n            </div>\n            <div class=\"button-row\">\n              <el-tooltip v-if=\"scope.row.status === 2\" content=\"确认收货\" placement=\"top\">\n                <el-button\n                  type=\"warning\"\n                  size=\"mini\"\n                  icon=\"el-icon-box\"\n                  @click=\"handleComplete(scope.row)\"\n                >\n                  完成\n                </el-button>\n              </el-tooltip>\n              \n              <el-tooltip v-if=\"[0, 1].includes(scope.row.status)\" content=\"取消订单\" placement=\"top\">\n                <el-button\n                  type=\"danger\"\n                  size=\"mini\"\n                  icon=\"el-icon-close\"\n                  @click=\"handleCancel(scope.row)\"\n                >\n                  取消\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页区域 -->\n    <pagination\n      v-show=\"total > 0\"\n      :total=\"total\"\n      :page.sync=\"listQuery.pageNum\"\n      :limit.sync=\"listQuery.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 发货对话框 -->\n    <el-dialog title=\"订单发货\" :visible.sync=\"shipDialogVisible\" width=\"500px\">\n      <el-form\n        ref=\"shipForm\"\n        :model=\"shipForm\"\n        :rules=\"shipRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"订单号\">\n          <span>{{ currentOrder.orderSn }}</span>\n        </el-form-item>\n        <el-form-item label=\"物流公司\" prop=\"shippingCompany\">\n          <el-select v-model=\"shipForm.shippingCompany\" placeholder=\"请选择物流公司\" style=\"width: 100%\">\n            <el-option label=\"顺丰速运\" value=\"SF\" />\n            <el-option label=\"中通快递\" value=\"ZTO\" />\n            <el-option label=\"圆通速递\" value=\"YTO\" />\n            <el-option label=\"韵达快递\" value=\"YD\" />\n            <el-option label=\"申通快递\" value=\"STO\" />\n            <el-option label=\"京东物流\" value=\"JD\" />\n            <el-option label=\"其他\" value=\"OTHER\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"物流单号\" prop=\"trackingNumber\">\n          <el-input v-model=\"shipForm.trackingNumber\" placeholder=\"请输入物流单号\" />\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input v-model=\"shipForm.remark\" type=\"textarea\" :rows=\"3\" placeholder=\"可选备注信息\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"shipDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitShipForm\" :loading=\"shipSubmitting\">确认发货</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { fetchList, shipOrder, cancelOrder, completeOrder } from '@/api/order'\nimport Pagination from '@/components/Pagination'\n\nexport default {\n  name: 'OrderList',\n  components: { Pagination },\n  data() {\n    return {\n      list: [], // 订单列表\n      total: 0, // 总数\n      listLoading: true, // 加载状态\n      listQuery: { // 查询参数\n        pageNum: 1,\n        pageSize: 10,\n        status: undefined,\n        userId: undefined\n      },\n      // 状态选项\n      statusOptions: [\n        { value: 0, label: '待支付' },\n        { value: 1, label: '已支付' },\n        { value: 2, label: '已发货' },\n        { value: 3, label: '已完成' },\n        { value: 4, label: '已取消' },\n        { value: 5, label: '已退款' }\n      ],\n      // 发货对话框\n      shipDialogVisible: false,\n      shipSubmitting: false,\n      currentOrder: {}, // 当前操作的订单\n      shipForm: {\n        orderId: '',\n        shippingCompany: '',\n        trackingNumber: '',\n        remark: ''\n      },\n      shipRules: {\n        shippingCompany: [\n          { required: true, message: '请选择物流公司', trigger: 'change' }\n        ],\n        trackingNumber: [\n          { required: true, message: '请输入物流单号', trigger: 'blur' },\n          { min: 5, max: 30, message: '长度在 5 到 30 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    // 获取订单列表\n    getList() {\n      this.listLoading = true\n      console.log('请求订单列表，参数:', this.listQuery)\n      \n      fetchList(this.listQuery).then(response => {\n        console.log('订单API响应:', response)\n        const { data, code } = response\n        \n        // 添加更详细的日志\n        console.log('API响应数据详情:', {\n          code: code,\n          dataType: typeof data,\n          hasData: !!data,\n          isArray: Array.isArray(data),\n          data: data ? JSON.stringify(data) : 'null'\n        })\n        \n        if (data && data.list) {\n          console.log('list字段内容:', {\n            length: data.list.length,\n            isArray: Array.isArray(data.list),\n            content: JSON.stringify(data.list)\n          })\n        }\n        \n        if (code !== 200 || !data) {\n          console.error('API返回数据异常:', response)\n          this.list = []\n          this.total = 0\n          this.listLoading = false\n          return\n        }\n        \n        // 处理后端返回的OrderListResponse标准格式\n        if (data.list) {\n          this.list = data.list\n          this.total = data.total || 0\n        } else {\n          console.warn('API返回数据格式不符合预期，缺少records字段:', data)\n          this.list = Array.isArray(data) ? data : []\n          this.total = this.list.length\n        }\n        \n        // 处理每个订单项的数据完整性\n        this.list = this.list.map(order => {\n          return {\n            id: order.id || 0,\n            orderSn: order.orderSn || '未知订单号',\n            userName: order.userName || '未知用户',\n            userAvatar: order.userAvatar || '',\n            status: order.status !== undefined ? order.status : 0,\n            totalAmount: order.totalAmount || 0,\n            payType: order.payType !== undefined ? order.payType : 0,\n            createTime: order.createTime || '未知时间',\n            orderItemVoList: order.orderItemVoList || [],\n            ...order\n          }\n        })\n        \n        console.log('处理后的订单列表:', this.list)\n        console.log('订单列表长度:', this.list.length)\n        this.listLoading = false\n      }).catch(error => {\n        console.error('获取订单列表失败:', error)\n        this.listLoading = false\n        this.$message.error('获取订单列表失败: ' + (error.message || '未知错误'))\n        this.list = []\n        this.total = 0\n      })\n    },\n    \n    // 获取订单商品数量\n    getItemCount(order) {\n      if (order.itemCount !== undefined) {\n        return order.itemCount\n      }\n      \n      if (order.orderItemVoList && Array.isArray(order.orderItemVoList)) {\n        return order.orderItemVoList.reduce((sum, item) => sum + (item.quantity || 0), 0)\n      }\n      \n      return 0\n    },\n    // 处理搜索\n    handleSearch() {\n      this.listQuery.pageNum = 1\n      this.getList()\n    },\n    // 刷新列表\n    refreshList() {\n      this.listQuery.pageNum = 1\n      this.getList()\n    },\n    // 导出数据\n    handleExport() {\n      this.$message({\n        message: '导出订单数据功能开发中...',\n        type: 'info'\n      })\n    },\n    // 查看订单详情\n    handleDetail(row) {\n      this.$router.push({\n        name: 'OrderDetail',\n        params: { id: row.id }\n      })\n    },\n    // 处理发货\n    handleShip(row) {\n      this.currentOrder = row\n      this.shipForm = {\n        orderId: row.id,\n        shippingCompany: '',\n        trackingNumber: '',\n        remark: ''\n      }\n      this.shipDialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['shipForm'].clearValidate()\n      })\n    },\n    // 提交发货表单\n    submitShipForm() {\n      this.$refs['shipForm'].validate((valid) => {\n        if (valid) {\n          this.shipSubmitting = true\n          shipOrder(this.currentOrder.id, this.shipForm).then(() => {\n            this.shipDialogVisible = false\n            this.$notify({\n              title: '成功',\n              message: '订单发货成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }).catch(() => {\n            this.$message.error('订单发货失败')\n          }).finally(() => {\n            this.shipSubmitting = false\n          })\n        }\n      })\n    },\n    // 取消订单\n    handleCancel(row) {\n      this.$confirm('确认取消该订单?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        cancelOrder(row.id, {}).then(() => {\n          this.$notify({\n            title: '成功',\n            message: '订单取消成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        }).catch(() => {\n          this.$message.error('订单取消失败')\n        })\n      })\n    },\n    // 完成订单\n    handleComplete(row) {\n      this.$confirm('确认将此订单标记为已完成?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        completeOrder(row.id).then(() => {\n          this.$notify({\n            title: '成功',\n            message: '订单已完成',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        }).catch(() => {\n          this.$message.error('操作失败')\n        })\n      })\n    },\n    // 获取支付方式名称\n    getpayTypeName(method) {\n      const methodMap = {\n        0: '支付宝',\n        1: '微信支付',\n        2: '信用卡',\n        3: '现金'\n      }\n      return methodMap[method] || method\n    },\n    // 获取订单状态名称\n    getOrderStatusName(status) {\n      const statusMap = {\n        0: '待支付',\n        1: '已支付',\n        2: '已发货',\n        3: '已完成',\n        4: '已取消',\n        5: '已退款'\n      }\n      return statusMap[status] || status\n    },\n    // 获取订单状态类型\n    getOrderStatusType(status) {\n      const statusMap = {\n        0: 'warning',\n        1: 'primary',\n        2: 'info',\n        3: 'success',\n        4: 'danger',\n        5: 'info'\n      }\n      return statusMap[status] || ''\n    },\n    // 加载测试数据\n    loadTestData() {\n      // 创建模拟数据\n      const testData = [\n        {\n          id: 1001,\n          orderSn: 'TEST-1001',\n          userName: '测试用户1',\n          userAvatar: '',\n          status: 0,\n          totalAmount: 199.00,\n          payType: 0,\n          createTime: '2025-04-15 12:00:00',\n          orderItemVoList: [\n            {\n              id: 10001,\n              productId: 1,\n              productName: '测试商品1',\n              productImage: 'https://via.placeholder.com/100',\n              price: 99.00,\n              quantity: 1\n            },\n            {\n              id: 10002,\n              productId: 2,\n              productName: '测试商品2',\n              productImage: 'https://via.placeholder.com/100',\n              price: 100.00,\n              quantity: 1\n            }\n          ]\n        },\n        {\n          id: 1002,\n          orderSn: 'TEST-1002',\n          userName: '测试用户2',\n          userAvatar: '',\n          status: 1,\n          totalAmount: 299.00,\n          payType: 1,\n          createTime: '2025-04-15 13:00:00',\n          orderItemVoList: [\n            {\n              id: 10003,\n              productId: 3,\n              productName: '测试商品3',\n              productImage: 'https://via.placeholder.com/100',\n              price: 299.00,\n              quantity: 1\n            }\n          ]\n        },\n        {\n          id: 1003,\n          orderSn: 'TEST-1003',\n          userName: '测试用户3',\n          userAvatar: '',\n          status: 2,\n          totalAmount: 399.00,\n          payType: 2,\n          createTime: '2025-04-15 14:00:00',\n          orderItemVoList: [\n            {\n              id: 10004,\n              productId: 4,\n              productName: '测试商品4',\n              productImage: 'https://via.placeholder.com/100',\n              price: 199.00,\n              quantity: 2\n            }\n          ]\n        },\n        {\n          id: 1004,\n          orderSn: 'TEST-1004',\n          userName: '测试用户4',\n          userAvatar: '',\n          status: 3,\n          totalAmount: 499.00,\n          payType: 3,\n          createTime: '2025-04-15 15:00:00',\n          orderItemVoList: [\n            {\n              id: 10005,\n              productId: 5,\n              productName: '测试商品5',\n              productImage: 'https://via.placeholder.com/100',\n              price: 499.00,\n              quantity: 1\n            }\n          ]\n        },\n        {\n          id: 1005,\n          orderSn: 'TEST-1005',\n          userName: '测试用户5',\n          userAvatar: '',\n          status: 4,\n          totalAmount: 599.00,\n          payType: 0,\n          createTime: '2025-04-15 16:00:00',\n          orderItemVoList: [\n            {\n              id: 10006,\n              productId: 6,\n              productName: '测试商品6',\n              productImage: 'https://via.placeholder.com/100',\n              price: 599.00,\n              quantity: 1\n            }\n          ]\n        }\n      ]\n      \n      // 使用测试数据\n      this.list = testData\n      this.total = testData.length\n      this.listLoading = false\n      \n      this.$message({\n        message: '已加载测试数据',\n        type: 'success'\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  padding: 20px;\n}\n\n.filter-container {\n  background-color: #fff;\n  padding: 15px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n\n  .filter-item {\n    width: 100%;\n    margin-bottom: 10px;\n  }\n\n  .button-group {\n    display: flex;\n    justify-content: flex-end;\n    \n    .el-button {\n      margin-left: 10px;\n    }\n    \n    @media (max-width: 768px) {\n      justify-content: center;\n      margin-top: 10px;\n    }\n  }\n}\n\n.action-buttons {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  \n  .button-row {\n    display: flex;\n    justify-content: center;\n    margin: 3px 0;\n    \n    .el-button {\n      margin: 2px;\n      min-width: 80px;\n    }\n  }\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  .user-name {\n    margin-left: 8px;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 80px;\n  }\n}\n\n.price {\n  color: #f56c6c;\n  font-weight: bold;\n}\n</style> "]}]}