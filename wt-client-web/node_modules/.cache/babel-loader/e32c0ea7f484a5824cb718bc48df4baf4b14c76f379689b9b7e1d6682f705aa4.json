{"ast":null,"code":"function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"user-address\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"address-list\"\n};\nvar _hoisted_4 = {\n  \"class\": \"address-content\"\n};\nvar _hoisted_5 = {\n  \"class\": \"address-info\"\n};\nvar _hoisted_6 = {\n  \"class\": \"address-header\"\n};\nvar _hoisted_7 = {\n  \"class\": \"name\"\n};\nvar _hoisted_8 = {\n  \"class\": \"phone\"\n};\nvar _hoisted_9 = {\n  \"class\": \"address-detail\"\n};\nvar _hoisted_10 = {\n  \"class\": \"address-actions\"\n};\nvar _hoisted_11 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_cascader = _resolveComponent(\"el-cascader\");\n  var _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"address-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"收货地址\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return $setup.showAddressDialog('add');\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[9] || (_cache[9] = [_createTextVNode(\"添加新地址\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [$setup.addressList.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.addressList, function (item) {\n        return _openBlock(), _createBlock(_component_el_card, {\n          key: item.id,\n          \"class\": _normalizeClass([\"address-item\", {\n            'default-address': item.isDefault\n          }])\n        }, {\n          \"default\": _withCtx(function () {\n            return [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(item.phone), 1 /* TEXT */), item.isDefault ? (_openBlock(), _createBlock(_component_el_tag, {\n              key: 0,\n              type: \"success\",\n              size: \"small\"\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[11] || (_cache[11] = [_createTextVNode(\"默认地址\")]));\n              }),\n              _: 1 /* STABLE */\n            })) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.province) + \" \" + _toDisplayString(item.city) + \" \" + _toDisplayString(item.district) + \" \" + _toDisplayString(item.detailAddress), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_button, {\n              link: \"\",\n              onClick: function onClick($event) {\n                return $setup.showAddressDialog('edit', item);\n              }\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[12] || (_cache[12] = [_createTextVNode(\"编辑\")]));\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_popconfirm, {\n              title: \"确定要删除这个地址吗？\",\n              onConfirm: function onConfirm($event) {\n                return $setup.deleteAddress(item.id);\n              }\n            }, {\n              reference: _withCtx(function () {\n                return [_createVNode(_component_el_button, {\n                  link: \"\",\n                  \"class\": \"delete-btn\"\n                }, {\n                  \"default\": _withCtx(function () {\n                    return _toConsumableArray(_cache[13] || (_cache[13] = [_createTextVNode(\"删除\")]));\n                  }),\n                  _: 1 /* STABLE */\n                })];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"]), !item.isDefault ? (_openBlock(), _createBlock(_component_el_button, {\n              key: 0,\n              link: \"\",\n              onClick: function onClick($event) {\n                return $setup.setDefaultAddress(item.id);\n              }\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[14] || (_cache[14] = [_createTextVNode(\" 设为默认 \")]));\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])])];\n          }),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\"]);\n      }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createBlock(_component_el_empty, {\n        key: 1,\n        description: \"暂无收货地址\",\n        \"image-size\": 200\n      }))];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 地址表单对话框 \"), _createVNode(_component_el_dialog, {\n    title: $setup.dialogType === 'add' ? '添加新地址' : '编辑地址',\n    modelValue: $setup.addressDialogVisible,\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n      return $setup.addressDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_11, [_createVNode(_component_el_button, {\n        onClick: _cache[7] || (_cache[7] = function ($event) {\n          return $setup.addressDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[16] || (_cache[16] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitAddressForm\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[17] || (_cache[17] = [_createTextVNode(\"确定\")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        model: $setup.addressForm,\n        rules: $setup.rules,\n        ref: \"addressFormRef\",\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"收货人\",\n            prop: \"name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.addressForm.name,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.addressForm.name = $event;\n                }),\n                placeholder: \"请输入收货人姓名\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"手机号\",\n            prop: \"phone\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.addressForm.phone,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.addressForm.phone = $event;\n                }),\n                placeholder: \"请输入手机号\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"所在地区\",\n            prop: \"area\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_cascader, {\n                modelValue: $setup.addressForm.area,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.addressForm.area = $event;\n                }),\n                options: $setup.areaOptions,\n                placeholder: \"请选择省/市/区\",\n                props: {\n                  expandTrigger: 'hover'\n                }\n              }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"详细地址\",\n            prop: \"detailAddress\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.addressForm.detailAddress,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.addressForm.detailAddress = $event;\n                }),\n                type: \"textarea\",\n                rows: 2,\n                placeholder: \"请输入详细地址，如街道、门牌号等\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"邮编\",\n            prop: \"postCode\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.addressForm.postCode,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return $setup.addressForm.postCode = $event;\n                }),\n                placeholder: \"请输入邮编（选填）\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_checkbox, {\n                modelValue: $setup.addressForm.isDefault,\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                  return $setup.addressForm.isDefault = $event;\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[15] || (_cache[15] = [_createTextVNode(\"设为默认收货地址\")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","_cache","$event","$setup","showAddressDialog","_createTextVNode","_","addressList","length","_hoisted_3","_Fragment","_renderList","item","_createBlock","id","_normalizeClass","isDefault","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","name","_hoisted_8","phone","_component_el_tag","size","_toConsumableArray","_createCommentVNode","_hoisted_9","province","city","district","detailAddress","_hoisted_10","link","_component_el_popconfirm","title","onConfirm","deleteAddress","reference","setDefaultAddress","_component_el_empty","description","_component_el_dialog","dialogType","modelValue","addressDialogVisible","width","footer","_hoisted_11","submitAddressForm","_component_el_form","model","addressForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","placeholder","_component_el_cascader","area","options","areaOptions","props","expandTrigger","rows","postCode","_component_el_checkbox"],"sources":["D:\\code\\project\\WhaleTide-1\\WhaleTide\\wt-client-web\\src\\views\\user\\Address.vue"],"sourcesContent":["/* eslint-disable */\r\n<template>\r\n  <div class=\"user-address\">\r\n    <el-card class=\"address-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h2>收货地址</h2>\r\n          <el-button type=\"primary\" @click=\"showAddressDialog('add')\">添加新地址</el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <div v-if=\"addressList.length > 0\" class=\"address-list\">\r\n        <el-card v-for=\"item in addressList\" :key=\"item.id\" class=\"address-item\" :class=\"{ 'default-address': item.isDefault }\">\r\n          <div class=\"address-content\">\r\n            <div class=\"address-info\">\r\n              <div class=\"address-header\">\r\n                <span class=\"name\">{{ item.name }}</span>\r\n                <span class=\"phone\">{{ item.phone }}</span>\r\n                <el-tag v-if=\"item.isDefault\" type=\"success\" size=\"small\">默认地址</el-tag>\r\n              </div>\r\n              <div class=\"address-detail\">\r\n                {{ item.province }} {{ item.city }} {{ item.district }} {{ item.detailAddress }}\r\n              </div>\r\n            </div>\r\n            <div class=\"address-actions\">\r\n              <el-button link @click=\"showAddressDialog('edit', item)\">编辑</el-button>\r\n              <el-popconfirm\r\n                title=\"确定要删除这个地址吗？\"\r\n                @confirm=\"deleteAddress(item.id)\"\r\n              >\r\n                <template #reference>\r\n                  <el-button link class=\"delete-btn\">删除</el-button>\r\n                </template>\r\n              </el-popconfirm>\r\n              <el-button \r\n                v-if=\"!item.isDefault\" \r\n                link \r\n                @click=\"setDefaultAddress(item.id)\"\r\n              >\r\n                设为默认\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n      \r\n      <el-empty v-else description=\"暂无收货地址\" :image-size=\"200\"></el-empty>\r\n    </el-card>\r\n    \r\n    <!-- 地址表单对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogType === 'add' ? '添加新地址' : '编辑地址'\"\r\n      v-model=\"addressDialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form :model=\"addressForm\" :rules=\"rules\" ref=\"addressFormRef\" label-width=\"80px\">\r\n        <el-form-item label=\"收货人\" prop=\"name\">\r\n          <el-input v-model=\"addressForm.name\" placeholder=\"请输入收货人姓名\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"addressForm.phone\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"所在地区\" prop=\"area\">\r\n          <el-cascader\r\n            v-model=\"addressForm.area\"\r\n            :options=\"areaOptions\"\r\n            placeholder=\"请选择省/市/区\"\r\n            :props=\"{ expandTrigger: 'hover' }\"\r\n          ></el-cascader>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"详细地址\" prop=\"detailAddress\">\r\n          <el-input\r\n            v-model=\"addressForm.detailAddress\"\r\n            type=\"textarea\"\r\n            :rows=\"2\"\r\n            placeholder=\"请输入详细地址，如街道、门牌号等\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"邮编\" prop=\"postCode\">\r\n          <el-input v-model=\"addressForm.postCode\" placeholder=\"请输入邮编（选填）\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-checkbox v-model=\"addressForm.isDefault\">设为默认收货地址</el-checkbox>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"addressDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitAddressForm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserAddress',\r\n  setup() {\r\n    const addressList = ref([])\r\n    const addressDialogVisible = ref(false)\r\n    const dialogType = ref('add') // 'add' or 'edit'\r\n    const addressFormRef = ref(null)\r\n    \r\n    // 表单数据\r\n    const addressForm = reactive({\r\n      id: '',\r\n      name: '',\r\n      phone: '',\r\n      area: [],\r\n      province: '',\r\n      city: '',\r\n      district: '',\r\n      detailAddress: '',\r\n      postCode: '',\r\n      isDefault: false\r\n    })\r\n    \r\n    // 表单验证规则\r\n    const rules = {\r\n      name: [\r\n        { required: true, message: '请输入收货人姓名', trigger: 'blur' },\r\n        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      phone: [\r\n        { required: true, message: '请输入手机号', trigger: 'blur' },\r\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n      ],\r\n      area: [\r\n        { required: true, message: '请选择所在地区', trigger: 'change' }\r\n      ],\r\n      detailAddress: [\r\n        { required: true, message: '请输入详细地址', trigger: 'blur' },\r\n        { min: 5, max: 100, message: '长度在 5 到 100 个字符', trigger: 'blur' }\r\n      ],\r\n      postCode: [\r\n        { pattern: /^\\d{6}$/, message: '请输入正确的邮政编码', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // 示例地区选项数据\r\n    // 实际项目中应该从后端获取完整的地区数据\r\n    const areaOptions = ref([\r\n      {\r\n        value: '北京市',\r\n        label: '北京市',\r\n        children: [\r\n          {\r\n            value: '北京市',\r\n            label: '北京市',\r\n            children: [\r\n              { value: '东城区', label: '东城区' },\r\n              { value: '西城区', label: '西城区' },\r\n              { value: '朝阳区', label: '朝阳区' },\r\n              { value: '海淀区', label: '海淀区' }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        value: '上海市',\r\n        label: '上海市',\r\n        children: [\r\n          {\r\n            value: '上海市',\r\n            label: '上海市',\r\n            children: [\r\n              { value: '黄浦区', label: '黄浦区' },\r\n              { value: '徐汇区', label: '徐汇区' },\r\n              { value: '长宁区', label: '长宁区' },\r\n              { value: '静安区', label: '静安区' }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      // 实际项目中需要更多省市区数据\r\n    ])\r\n    \r\n    // 获取地址列表\r\n    const fetchAddressList = async () => {\r\n      try {\r\n        const response = await axios.get('/api/user/address/list')\r\n        if (response.data.code === 200) {\r\n          addressList.value = response.data.data\r\n        } else {\r\n          ElMessage.error(response.data.message || '获取地址列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取地址列表出错:', error)\r\n        ElMessage.error('网络错误，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    // 打开地址表单对话框\r\n    const showAddressDialog = (type, address) => {\r\n      dialogType.value = type\r\n      addressDialogVisible.value = true\r\n      resetAddressForm()\r\n      \r\n      if (type === 'edit' && address) {\r\n        addressForm.id = address.id\r\n        addressForm.name = address.name\r\n        addressForm.phone = address.phone\r\n        addressForm.area = [address.province, address.city, address.district]\r\n        addressForm.province = address.province\r\n        addressForm.city = address.city\r\n        addressForm.district = address.district\r\n        addressForm.detailAddress = address.detailAddress\r\n        addressForm.postCode = address.postCode\r\n        addressForm.isDefault = address.isDefault\r\n      }\r\n    }\r\n    \r\n    // 重置表单\r\n    const resetAddressForm = () => {\r\n      if (addressFormRef.value) {\r\n        addressFormRef.value.resetFields()\r\n      }\r\n      \r\n      addressForm.id = ''\r\n      addressForm.name = ''\r\n      addressForm.phone = ''\r\n      addressForm.area = []\r\n      addressForm.province = ''\r\n      addressForm.city = ''\r\n      addressForm.district = ''\r\n      addressForm.detailAddress = ''\r\n      addressForm.postCode = ''\r\n      addressForm.isDefault = false\r\n    }\r\n    \r\n    // 提交地址表单\r\n    const submitAddressForm = async () => {\r\n      if (!addressFormRef.value) return\r\n      \r\n      await addressFormRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          // 从级联选择器的值中提取省市区\r\n          if (addressForm.area && addressForm.area.length === 3) {\r\n            addressForm.province = addressForm.area[0]\r\n            addressForm.city = addressForm.area[1]\r\n            addressForm.district = addressForm.area[2]\r\n          }\r\n          \r\n          try {\r\n            let url = '/api/user/address/add'\r\n            let method = 'post'\r\n            let message = '添加地址成功'\r\n            \r\n            if (dialogType.value === 'edit') {\r\n              url = '/api/user/address/update'\r\n              method = 'put'\r\n              message = '更新地址成功'\r\n            }\r\n            \r\n            const response = await axios[method](url, addressForm)\r\n            if (response.data.code === 200) {\r\n              ElMessage.success(message)\r\n              addressDialogVisible.value = false\r\n              fetchAddressList()\r\n            } else {\r\n              ElMessage.error(response.data.message || '操作失败')\r\n            }\r\n          } catch (error) {\r\n            console.error('地址操作出错:', error)\r\n            ElMessage.error('网络错误，请稍后重试')\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n    \r\n    // 删除地址\r\n    const deleteAddress = async (id) => {\r\n      try {\r\n        const response = await axios.delete(`/api/user/address/delete/${id}`)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('删除地址成功')\r\n          fetchAddressList()\r\n        } else {\r\n          ElMessage.error(response.data.message || '删除地址失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('删除地址出错:', error)\r\n        ElMessage.error('网络错误，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    // 设置默认地址\r\n    const setDefaultAddress = async (id) => {\r\n      try {\r\n        const response = await axios.put(`/api/user/address/default/${id}`)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('设置默认地址成功')\r\n          fetchAddressList()\r\n        } else {\r\n          ElMessage.error(response.data.message || '设置默认地址失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('设置默认地址出错:', error)\r\n        ElMessage.error('网络错误，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    onMounted(() => {\r\n      fetchAddressList()\r\n    })\r\n    \r\n    return {\r\n      addressList,\r\n      addressDialogVisible,\r\n      dialogType,\r\n      addressForm,\r\n      addressFormRef,\r\n      rules,\r\n      areaOptions,\r\n      showAddressDialog,\r\n      submitAddressForm,\r\n      deleteAddress,\r\n      setDefaultAddress\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-address {\r\n  padding: 20px;\r\n}\r\n\r\n.address-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.address-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.address-item {\r\n  position: relative;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.default-address {\r\n  border: 2px solid #67C23A;\r\n}\r\n\r\n.address-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 120px;\r\n}\r\n\r\n.address-info {\r\n  flex: 1;\r\n}\r\n\r\n.address-header {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.name {\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n  font-size: 16px;\r\n}\r\n\r\n.phone {\r\n  color: #606266;\r\n  margin-right: 10px;\r\n}\r\n\r\n.address-detail {\r\n  color: #606266;\r\n  line-height: 1.5;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.address-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #EBEEF5;\r\n  padding-top: 10px;\r\n}\r\n\r\n.delete-btn {\r\n  color: #F56C6C;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}