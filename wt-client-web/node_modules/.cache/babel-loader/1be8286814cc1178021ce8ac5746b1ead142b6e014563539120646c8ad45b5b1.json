{"ast":null,"code":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { placements } from '@popperjs/core';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nvar sliderButtonProps = buildProps({\n  modelValue: {\n    type: Number,\n    \"default\": 0\n  },\n  vertical: Boolean,\n  tooltipClass: String,\n  placement: {\n    type: String,\n    values: placements,\n    \"default\": \"top\"\n  }\n});\nvar sliderButtonEmits = _defineProperty({}, UPDATE_MODEL_EVENT, function (value) {\n  return isNumber(value);\n});\nexport { sliderButtonEmits, sliderButtonProps };","map":{"version":3,"names":["sliderButtonProps","buildProps","modelValue","type","Number","vertical","Boolean","tooltipClass","String","placement","values","placements","sliderButtonEmits","_defineProperty","UPDATE_MODEL_EVENT","value","isNumber"],"sources":["../../../../../../packages/components/slider/src/button.ts"],"sourcesContent":["import { placements } from '@popperjs/core'\nimport { buildProps, isNumber } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ComponentPublicInstance, ExtractPropTypes, Ref } from 'vue'\nimport type Button from './button.vue'\n\nexport const sliderButtonProps = buildProps({\n  modelValue: {\n    type: Number,\n    default: 0,\n  },\n  vertical: Boolean,\n  tooltipClass: String,\n  placement: {\n    type: String,\n    values: placements,\n    default: 'top',\n  },\n} as const)\nexport type SliderButtonProps = ExtractPropTypes<typeof sliderButtonProps>\n\nexport const sliderButtonEmits = {\n  [UPDATE_MODEL_EVENT]: (value: number) => isNumber(value),\n}\nexport type SliderButtonEmits = typeof sliderButtonEmits\n\nexport type SliderButtonInstance = ComponentPublicInstance<typeof Button>\n\nexport type ButtonRefs = Record<\n  'firstButton' | 'secondButton',\n  Ref<SliderButtonInstance | undefined>\n>\n\nexport interface SliderButtonInitData {\n  hovering: boolean\n  dragging: boolean\n  isClick: boolean\n  startX: number\n  currentX: number\n  startY: number\n  currentY: number\n  startPosition: number\n  newPosition: number\n  oldValue: number\n}\n"],"mappings":";;;;;;;;AAGY,IAACA,iBAAiB,GAAGC,UAAU,CAAC;EAC1CC,UAAU,EAAE;IACVC,IAAI,EAAEC,MAAM;IACZ,WAAS;EACb,CAAG;EACDC,QAAQ,EAAEC,OAAO;EACjBC,YAAY,EAAEC,MAAM;EACpBC,SAAS,EAAE;IACTN,IAAI,EAAEK,MAAM;IACZE,MAAM,EAAEC,UAAU;IAClB,WAAS;EACb;AACA,CAAC;AACW,IAACC,iBAAiB,GAAAC,eAAA,KAC3BC,kBAAkB,EAAG,UAACC,KAAK;EAAA,OAAKC,QAAQ,CAACD,KAAK,CAAC;AAAA,EAClD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}