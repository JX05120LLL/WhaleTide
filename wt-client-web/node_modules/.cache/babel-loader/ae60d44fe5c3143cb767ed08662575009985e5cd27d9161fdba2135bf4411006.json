{"ast":null,"code":"var _excluded = [\"mainTableRef\"];\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport { createVNode, mergeProps, isVNode } from 'vue';\nimport Table from '../table-grid.mjs';\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar MainTable = function MainTable(props, _ref) {\n  var slots = _ref.slots;\n  var mainTableRef = props.mainTableRef,\n    rest = _objectWithoutProperties(props, _excluded);\n  return createVNode(Table, mergeProps({\n    \"ref\": mainTableRef\n  }, rest), _isSlot(slots) ? slots : {\n    \"default\": function _default() {\n      return [slots];\n    }\n  });\n};\nvar MainTable$1 = MainTable;\nexport { MainTable$1 as default };","map":{"version":3,"names":["mainTableRef","props","rest","_objectWithoutProperties","_excluded","createVNode","Table","mergeProps","_isSlot","slots","default","MainTable$1","MainTable"],"sources":["../../../../../../../packages/components/table-v2/src/renderers/main-table.tsx"],"sourcesContent":["import Table from '../table-grid'\n\nimport type { FunctionalComponent, Ref } from 'vue'\nimport type { TableV2GridProps } from '../grid'\nimport type { TableGridInstance } from '../table-grid'\n\nexport type MainTableRendererProps = TableV2GridProps & {\n  mainTableRef: Ref<TableGridInstance | undefined>\n}\n\nconst MainTable: FunctionalComponent<MainTableRendererProps> = (\n  props: MainTableRendererProps,\n  { slots }\n) => {\n  const { mainTableRef, ...rest } = props\n  return (\n    <Table ref={mainTableRef} {...rest}>\n      {slots}\n    </Table>\n  )\n}\n\nexport default MainTable\n"],"mappings":";;;;;;;;gDAUM;EAAA,I;EAEF,IACCA,YAAA,GACGC,KAAA,CADHD,YAAA;IACGE,IAAA,GAAAC,wBAAA,CAAAF,KAAA,EAAAG,SAAA;SAAmBC,WAAA,CAAAC,KAAA,EAAAC,UAAA;IAAnB,KAAN,EAAAP;EACA,GAAAE,IAAA,GAAAM,OAAA,CAAAC,KAAA,IAAAA,KAAA;IAAA,WACc,SADdC,QACcA,CAAA;MAAA,QAAAD,KAAA;IAAA;EADd;AAAA;AAAA,IAAAE,WAAA,GAAAC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}