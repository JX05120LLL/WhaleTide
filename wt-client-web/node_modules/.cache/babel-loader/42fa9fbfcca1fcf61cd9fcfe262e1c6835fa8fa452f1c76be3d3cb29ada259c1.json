{"ast":null,"code":"function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nvar useTimePanel = function useTimePanel(_ref) {\n  var getAvailableHours = _ref.getAvailableHours,\n    getAvailableMinutes = _ref.getAvailableMinutes,\n    getAvailableSeconds = _ref.getAvailableSeconds;\n  var getAvailableTime = function getAvailableTime(date, role, first, compareDate) {\n    var availableTimeGetters = {\n      hour: getAvailableHours,\n      minute: getAvailableMinutes,\n      second: getAvailableSeconds\n    };\n    var result = date;\n    [\"hour\", \"minute\", \"second\"].forEach(function (type) {\n      if (availableTimeGetters[type]) {\n        var availableTimeSlots;\n        var method = availableTimeGetters[type];\n        switch (type) {\n          case \"minute\":\n            {\n              availableTimeSlots = method(result.hour(), role, compareDate);\n              break;\n            }\n          case \"second\":\n            {\n              availableTimeSlots = method(result.hour(), result.minute(), role, compareDate);\n              break;\n            }\n          default:\n            {\n              availableTimeSlots = method(role, compareDate);\n              break;\n            }\n        }\n        if ((availableTimeSlots == null ? void 0 : availableTimeSlots.length) && !availableTimeSlots.includes(result[type]())) {\n          var pos = first ? 0 : availableTimeSlots.length - 1;\n          result = result[type](availableTimeSlots[pos]);\n        }\n      }\n    });\n    return result;\n  };\n  var timePickerOptions = {};\n  var onSetOption = function onSetOption(_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      key = _ref3[0],\n      val = _ref3[1];\n    timePickerOptions[key] = val;\n  };\n  return {\n    timePickerOptions: timePickerOptions,\n    getAvailableTime: getAvailableTime,\n    onSetOption: onSetOption\n  };\n};\nexport { useTimePanel };","map":{"version":3,"names":["useTimePanel","_ref","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableTime","date","role","first","compareDate","availableTimeGetters","hour","minute","second","result","forEach","type","availableTimeSlots","method","length","includes","pos","timePickerOptions","onSetOption","_ref2","_ref3","_slicedToArray","key","val"],"sources":["../../../../../../../packages/components/time-picker/src/composables/use-time-panel.ts"],"sourcesContent":["import type { Dayjs } from 'dayjs'\n\nimport type {\n  GetDisabledHours,\n  GetDisabledMinutes,\n  GetDisabledSeconds,\n} from '../common/props'\n\ntype UseTimePanelProps = {\n  getAvailableHours: GetDisabledHours\n  getAvailableMinutes: GetDisabledMinutes\n  getAvailableSeconds: GetDisabledSeconds\n}\n\nexport const useTimePanel = ({\n  getAvailableHours,\n  getAvailableMinutes,\n  getAvailableSeconds,\n}: UseTimePanelProps) => {\n  const getAvailableTime = (\n    date: Dayjs,\n    role: string,\n    first: boolean,\n    compareDate?: Dayjs\n  ) => {\n    const availableTimeGetters = {\n      hour: getAvailableHours,\n      minute: getAvailableMinutes,\n      second: getAvailableSeconds,\n    } as const\n    let result = date\n    ;(['hour', 'minute', 'second'] as const).forEach((type) => {\n      if (availableTimeGetters[type]) {\n        let availableTimeSlots: number[]\n        const method = availableTimeGetters[type]\n        switch (type) {\n          case 'minute': {\n            availableTimeSlots = (method as typeof getAvailableMinutes)(\n              result.hour(),\n              role,\n              compareDate\n            )\n            break\n          }\n          case 'second': {\n            availableTimeSlots = (method as typeof getAvailableSeconds)(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n            break\n          }\n          default: {\n            availableTimeSlots = (method as typeof getAvailableHours)(\n              role,\n              compareDate\n            )\n            break\n          }\n        }\n\n        if (\n          availableTimeSlots?.length &&\n          !availableTimeSlots.includes(result[type]())\n        ) {\n          const pos = first ? 0 : availableTimeSlots.length - 1\n          result = result[type](availableTimeSlots[pos]) as unknown as Dayjs\n        }\n      }\n    })\n    return result\n  }\n\n  const timePickerOptions: Record<string, (...args: any[]) => void> = {}\n\n  const onSetOption = ([key, val]: [string, (...args: any[]) => void]) => {\n    timePickerOptions[key] = val\n  }\n\n  return {\n    timePickerOptions,\n\n    getAvailableTime,\n    onSetOption,\n  }\n}\n"],"mappings":";;;;;;AAAY,IAACA,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAInB;EAAA,IAHJC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;IACjBC,mBAAmB,GAAAF,IAAA,CAAnBE,mBAAmB;IACnBC,mBAAmB,GAAAH,IAAA,CAAnBG,mBAAmB;EAEnB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,WAAW,EAAK;IAC3D,IAAMC,oBAAoB,GAAG;MAC3BC,IAAI,EAAET,iBAAiB;MACvBU,MAAM,EAAET,mBAAmB;MAC3BU,MAAM,EAAET;IACd,CAAK;IACD,IAAIU,MAAM,GAAGR,IAAI;IACjB,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACS,OAAO,CAAC,UAACC,IAAI,EAAK;MAC7C,IAAIN,oBAAoB,CAACM,IAAI,CAAC,EAAE;QAC9B,IAAIC,kBAAkB;QACtB,IAAMC,MAAM,GAAGR,oBAAoB,CAACM,IAAI,CAAC;QACzC,QAAQA,IAAI;UACV,KAAK,QAAQ;YAAE;cACbC,kBAAkB,GAAGC,MAAM,CAACJ,MAAM,CAACH,IAAI,EAAE,EAAEJ,IAAI,EAAEE,WAAW,CAAC;cAC7D;YACZ;UACU,KAAK,QAAQ;YAAE;cACbQ,kBAAkB,GAAGC,MAAM,CAACJ,MAAM,CAACH,IAAI,EAAE,EAAEG,MAAM,CAACF,MAAM,EAAE,EAAEL,IAAI,EAAEE,WAAW,CAAC;cAC9E;YACZ;UACU;YAAS;cACPQ,kBAAkB,GAAGC,MAAM,CAACX,IAAI,EAAEE,WAAW,CAAC;cAC9C;YACZ;QACA;QACQ,IAAI,CAACQ,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACE,MAAM,KAAK,CAACF,kBAAkB,CAACG,QAAQ,CAACN,MAAM,CAACE,IAAI,CAAC,EAAE,CAAC,EAAE;UACrH,IAAMK,GAAG,GAAGb,KAAK,GAAG,CAAC,GAAGS,kBAAkB,CAACE,MAAM,GAAG,CAAC;UACrDL,MAAM,GAAGA,MAAM,CAACE,IAAI,CAAC,CAACC,kBAAkB,CAACI,GAAG,CAAC,CAAC;QACxD;MACA;IACA,CAAK,CAAC;IACF,OAAOP,MAAM;EACjB,CAAG;EACD,IAAMQ,iBAAiB,GAAG,EAAE;EAC5B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,KAAA,EAAmB;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;MAAdG,GAAG,GAAAF,KAAA;MAAEG,GAAG,GAAAH,KAAA;IAC5BH,iBAAiB,CAACK,GAAG,CAAC,GAAGC,GAAG;EAChC,CAAG;EACD,OAAO;IACLN,iBAAiB,EAAjBA,iBAAiB;IACjBjB,gBAAgB,EAAhBA,gBAAgB;IAChBkB,WAAW,EAAXA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}