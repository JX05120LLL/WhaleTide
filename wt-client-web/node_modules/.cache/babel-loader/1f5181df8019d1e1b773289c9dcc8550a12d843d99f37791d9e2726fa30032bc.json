{"ast":null,"code":"/* eslint-disable */\nimport axios from 'axios';\n\n// 设置基本URL，生产环境可以在环境变量中配置\naxios.defaults.baseURL = 'http://localhost:8080/api';\n\n// 图片URL处理函数\nexport var getImageUrl = function getImageUrl(path) {\n  if (!path) return '';\n  if (path.startsWith('http://') || path.startsWith('https://')) {\n    return path;\n  }\n  return \"http://localhost:8080\".concat(path.startsWith('/') ? path : '/' + path);\n};\n\n// 请求拦截器，添加认证信息\naxios.interceptors.request.use(function (config) {\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = \"Bearer \".concat(token);\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n// API请求方法\nexport default {\n  // 用户认证相关\n  auth: {\n    login: function login(credentials) {\n      return axios.post('/auth/login', credentials);\n    },\n    register: function register(userData) {\n      return axios.post('/auth/register', userData);\n    },\n    getProfile: function getProfile() {\n      return axios.get('/auth/profile');\n    }\n  },\n  // 分类相关\n  categories: {\n    getAll: function getAll() {\n      return axios.get('/categories');\n    },\n    getCategoryDetails: function getCategoryDetails(id) {\n      return axios.get(\"/categories/\".concat(id));\n    },\n    getCategoryDropdown: function getCategoryDropdown(id) {\n      return axios.get(\"/categories/\".concat(id, \"/dropdown\"));\n    }\n  },\n  // 产品相关\n  products: {\n    getAll: function getAll(params) {\n      return axios.get('/products', {\n        params: params\n      });\n    },\n    getById: function getById(id) {\n      return axios.get(\"/products/\".concat(id));\n    },\n    search: function search(keyword) {\n      return axios.get('/products/search', {\n        params: {\n          keyword: keyword\n        }\n      });\n    }\n  },\n  // 购物车相关\n  cart: {\n    getCart: function getCart() {\n      return axios.get('/cart');\n    },\n    addToCart: function addToCart(item) {\n      return axios.post('/cart', item);\n    },\n    updateCartItem: function updateCartItem(id, quantity) {\n      return axios.put(\"/cart/\".concat(id), {\n        quantity: quantity\n      });\n    },\n    removeFromCart: function removeFromCart(id) {\n      return axios[\"delete\"](\"/cart/\".concat(id));\n    },\n    clearCart: function clearCart() {\n      return axios[\"delete\"]('/cart');\n    }\n  },\n  // 订单相关\n  orders: {\n    getOrders: function getOrders() {\n      return axios.get('/orders');\n    },\n    getOrderDetails: function getOrderDetails(id) {\n      return axios.get(\"/orders/\".concat(id));\n    },\n    createOrder: function createOrder(orderData) {\n      return axios.post('/orders', orderData);\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","getImageUrl","path","startsWith","concat","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","auth","login","credentials","post","register","userData","getProfile","get","categories","getAll","getCategoryDetails","id","getCategoryDropdown","products","params","getById","search","keyword","cart","getCart","addToCart","item","updateCartItem","quantity","put","removeFromCart","clearCart","orders","getOrders","getOrderDetails","createOrder","orderData"],"sources":["D:/code/project/WhaleTide-1/WhaleTide/wt-client-web/src/utils/api.js"],"sourcesContent":["/* eslint-disable */\r\nimport axios from 'axios'\r\n\r\n// 设置基本URL，生产环境可以在环境变量中配置\r\naxios.defaults.baseURL = 'http://localhost:8080/api'\r\n\r\n// 图片URL处理函数\r\nexport const getImageUrl = (path) => {\r\n  if (!path) return '';\r\n  if (path.startsWith('http://') || path.startsWith('https://')) {\r\n    return path;\r\n  }\r\n  return `http://localhost:8080${path.startsWith('/') ? path : '/' + path}`;\r\n};\r\n\r\n// 请求拦截器，添加认证信息\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// API请求方法\r\nexport default {\r\n  // 用户认证相关\r\n  auth: {\r\n    login: (credentials) => axios.post('/auth/login', credentials),\r\n    register: (userData) => axios.post('/auth/register', userData),\r\n    getProfile: () => axios.get('/auth/profile')\r\n  },\r\n  \r\n  // 分类相关\r\n  categories: {\r\n    getAll: () => axios.get('/categories'),\r\n    getCategoryDetails: (id) => axios.get(`/categories/${id}`),\r\n    getCategoryDropdown: (id) => axios.get(`/categories/${id}/dropdown`)\r\n  },\r\n  \r\n  // 产品相关\r\n  products: {\r\n    getAll: (params) => axios.get('/products', { params }),\r\n    getById: (id) => axios.get(`/products/${id}`),\r\n    search: (keyword) => axios.get('/products/search', { params: { keyword } })\r\n  },\r\n  \r\n  // 购物车相关\r\n  cart: {\r\n    getCart: () => axios.get('/cart'),\r\n    addToCart: (item) => axios.post('/cart', item),\r\n    updateCartItem: (id, quantity) => axios.put(`/cart/${id}`, { quantity }),\r\n    removeFromCart: (id) => axios.delete(`/cart/${id}`),\r\n    clearCart: () => axios.delete('/cart')\r\n  },\r\n  \r\n  // 订单相关\r\n  orders: {\r\n    getOrders: () => axios.get('/orders'),\r\n    getOrderDetails: (id) => axios.get(`/orders/${id}`),\r\n    createOrder: (orderData) => axios.post('/orders', orderData)\r\n  }\r\n} "],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,2BAA2B;;AAEpD;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAK;EACnC,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;EACpB,IAAIA,IAAI,CAACC,UAAU,CAAC,SAAS,CAAC,IAAID,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE;IAC7D,OAAOD,IAAI;EACb;EACA,+BAAAE,MAAA,CAA+BF,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,GAAGD,IAAI,GAAG,GAAG,GAAGA,IAAI;AACzE,CAAC;;AAED;AACAJ,KAAK,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAAC,MAAM,EAAI;EACR,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,aAAAR,MAAA,CAAaK,KAAK,CAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACD,UAAAK,KAAK,EAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,eAAe;EACb;EACAG,IAAI,EAAE;IACJC,KAAK,EAAE,SAAPA,KAAKA,CAAGC,WAAW;MAAA,OAAKpB,KAAK,CAACqB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAAA;IAC9DE,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,QAAQ;MAAA,OAAKvB,KAAK,CAACqB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;IAAA;IAC9DC,UAAU,EAAE,SAAZA,UAAUA,CAAA;MAAA,OAAQxB,KAAK,CAACyB,GAAG,CAAC,eAAe,CAAC;IAAA;EAC9C,CAAC;EAED;EACAC,UAAU,EAAE;IACVC,MAAM,EAAE,SAARA,MAAMA,CAAA;MAAA,OAAQ3B,KAAK,CAACyB,GAAG,CAAC,aAAa,CAAC;IAAA;IACtCG,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAGC,EAAE;MAAA,OAAK7B,KAAK,CAACyB,GAAG,gBAAAnB,MAAA,CAAgBuB,EAAE,CAAE,CAAC;IAAA;IAC1DC,mBAAmB,EAAE,SAArBA,mBAAmBA,CAAGD,EAAE;MAAA,OAAK7B,KAAK,CAACyB,GAAG,gBAAAnB,MAAA,CAAgBuB,EAAE,cAAW,CAAC;IAAA;EACtE,CAAC;EAED;EACAE,QAAQ,EAAE;IACRJ,MAAM,EAAE,SAARA,MAAMA,CAAGK,MAAM;MAAA,OAAKhC,KAAK,CAACyB,GAAG,CAAC,WAAW,EAAE;QAAEO,MAAM,EAANA;MAAO,CAAC,CAAC;IAAA;IACtDC,OAAO,EAAE,SAATA,OAAOA,CAAGJ,EAAE;MAAA,OAAK7B,KAAK,CAACyB,GAAG,cAAAnB,MAAA,CAAcuB,EAAE,CAAE,CAAC;IAAA;IAC7CK,MAAM,EAAE,SAARA,MAAMA,CAAGC,OAAO;MAAA,OAAKnC,KAAK,CAACyB,GAAG,CAAC,kBAAkB,EAAE;QAAEO,MAAM,EAAE;UAAEG,OAAO,EAAPA;QAAQ;MAAE,CAAC,CAAC;IAAA;EAC7E,CAAC;EAED;EACAC,IAAI,EAAE;IACJC,OAAO,EAAE,SAATA,OAAOA,CAAA;MAAA,OAAQrC,KAAK,CAACyB,GAAG,CAAC,OAAO,CAAC;IAAA;IACjCa,SAAS,EAAE,SAAXA,SAASA,CAAGC,IAAI;MAAA,OAAKvC,KAAK,CAACqB,IAAI,CAAC,OAAO,EAAEkB,IAAI,CAAC;IAAA;IAC9CC,cAAc,EAAE,SAAhBA,cAAcA,CAAGX,EAAE,EAAEY,QAAQ;MAAA,OAAKzC,KAAK,CAAC0C,GAAG,UAAApC,MAAA,CAAUuB,EAAE,GAAI;QAAEY,QAAQ,EAARA;MAAS,CAAC,CAAC;IAAA;IACxEE,cAAc,EAAE,SAAhBA,cAAcA,CAAGd,EAAE;MAAA,OAAK7B,KAAK,UAAO,UAAAM,MAAA,CAAUuB,EAAE,CAAE,CAAC;IAAA;IACnDe,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ5C,KAAK,UAAO,CAAC,OAAO,CAAC;IAAA;EACxC,CAAC;EAED;EACA6C,MAAM,EAAE;IACNC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,OAAQ9C,KAAK,CAACyB,GAAG,CAAC,SAAS,CAAC;IAAA;IACrCsB,eAAe,EAAE,SAAjBA,eAAeA,CAAGlB,EAAE;MAAA,OAAK7B,KAAK,CAACyB,GAAG,YAAAnB,MAAA,CAAYuB,EAAE,CAAE,CAAC;IAAA;IACnDmB,WAAW,EAAE,SAAbA,WAAWA,CAAGC,SAAS;MAAA,OAAKjD,KAAK,CAACqB,IAAI,CAAC,SAAS,EAAE4B,SAAS,CAAC;IAAA;EAC9D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}